                                                                          PYTHON
Find the minimum among 10 numbers.
Sample Testcase :
INPUT
5 4 3 2 1 7 6 10 8 9
OUTPUT
1

num=input().split()
min=num[0]
for i in range(1,10):
if(num[i]<min):
min=num[i]
else:
min=min
print(min)

Given 3 numbers A,B,C find if they can form the sides of a right angled triangle.
Input Size : A,B,C <= 100000
Sample Testcase :
INPUT
3 4 5
OUTPUT
yes

A,B,C=map(int,input().split())
if(C**2==A**2+B**2):
 print("yes")
else:
 print("no")

Given a number N, print 'yes' if it is composite else print 'no'.
Sample Testcase :
INPUT
123
OUTPUT
yes

N=int(input())
if(N>3):
 if(N%2==0 or N%3==0):
  print("yes")
 else:
  print("no")
else:
 print("no")

Given a number N, find its factorial.
Input Size : N <= 20
Sample Testcase :
INPUT
5
OUTPUT
120

fact=int(input())
ans=1
for i in range(1,fact+1):
 ans=ans*i
print(ans)
Basic swap
st=input()
length=len(st)
swap=""
for i in range(0,len(st)):
 if(length>0):
  swap=str(swap+st[length-1])
  length=length-1
print(swap)

Given a string s swap the even and odd characters.
Input Size : |s| <= 10000000(complexity O(n))
Sample Testcase :
INPUT
abcd
OUTPUT
badc

st=input()
length=len(st)
swap=""
for i in range(1,len(st),2):
even=st[i]
odd=st[i-1]
swap=swap+even+odd
print(swap)


count the number of character in the string

str1=input()
dict={}
for i in str1:
#keys=dict.keys()
if i in dict:
  dict[i]+=1
 else:
  dict[i]=1
print(dict)

count the number of string in the paragraph

str1=input().split()
dict={}
for i in str1:
#keys=dict.keys()
if i in dict:
dict[i]+=1
 else:
dict[i]=1
print(dict)
print(sum(dict.values()))


Given 2 numbers N and K followed by n numbers print the number of repetitions of K.
Sample Testcase :
INPUT
4 3
1 2 3 3
OUTPUT
2

N,K=map(int,input().split())
ans=0
for i in range(1):
 num2=input().split()
 for i in range(0,N):
  if(K==int(num2[i])):
   ans+=1
print(ans)

Given 2 numbers N and M add it and check whether the result is odd or even.
Sample Testcase :
INPUT
9 2
OUTPUT
odd

N,M=map(int,input().split())
sum1=0
sum1=N+M
if(sum1%2==0):
 print("even")
else:
 print("odd")

Given 2 numbers N and K followed by n numbers check if K exists.
Sample Testcase :
INPUT
4 2
1 2 3 3
OUTPUT
yes

N,K=map(int,input().split())
num2=map(int,input().split())
if(K in num2):
 print("yes") 
else:
 print("no") 

Given a number N and an array of N integers, find the Bitwise OR of the array.
Input Size : N <= 100000
Sample Testcase :
INPUT
2
2 4
OUTPUT
6



N=input()
numbers=input().split()
bitor=int(numbers[0])
for i in range(1,int(N)):
 bitor=bitor|int(numbers[i])
print(bitor)

Write a program to print the sum of the first K natural numbers.
Input Size : n <= 100000
Sample Testcase :
INPUT
3
OUTPUT
6

K=int(input())
ans=0
for i in range(1,K+1):
 ans=ans+i
print(ans)

Given a number N and 2 numbers L and R. Check whether N is between L and R. Print yes/no.
Sample Testcase :
INPUT
3
2 6
OUTPUT
yes

N=int(input())
L,R=map(int,input().split())
if(N>L and N<R):
 print("yes")
else:
 print("no")


Given a number N, print the Bitwise NOT of the number.
Input Size : 1 <= N <= 10000
Sample Testcase :
INPUT
5
OUTPUT
-6

N=int(input())
bitnot=~N
print(bitnot)

Given an array of numbers switch(swap) the adjacent characters.
Sample Testcase :
INPUT
5
3 2 1 2 3
OUTPUT
2 3 2 1 3


N=int(input())
numbers=input().split()
swap=""
if(N%2==0):
 for i in range(1,N,2):
  num=numbers[i-1]
  adjacent=numbers[i]
  swap=swap+adjacent+" "+num+" "
 print(swap)
else:
 for i in range(1,N,2):
  num=numbers[i-1]
  adjacent=numbers[i]
  swap=swap+adjacent+" "+num+" "
 swap+=numbers[N-1]
 print(swap)



Given a number N followed by N numbers. Find the smallest number and largest number and print both the indices(1based indexing).
Input Size : N <= 100000
Sample Testcase :
INPUT
5
1 2 3 4 5
OUTPUT
1 5

N=int(input())
num=input().split()
min1=num[0]
max1=num[0]
for i in range(1,N):
 if(num[i]<min1):
  min1=num[i]
  print("min"+min1)
 elif(num[i]>max1):
  max1=num[i]
  print("max"+max1)
print((num.index(min1))+1,(num.index(max1))+1)



Given 2 numbers N,M. Find their product and check whether it is a perfect square.
Sample Testcase :
INPUT
5 5
OUTPUT
Yes


import math
N,M=map(int,input().split())
if(N==M):
    print("yes")
else:
    product=N*M 
    sqr1=int(math.sqrt(product))
    if(product==sqr1*sqr1):
        print("yes")
    else:
        print("no")

Given 3 numbers A,B,C find if they can form the sides of a triangle.
Input Size : A,B,C <= 100000
Sample Testcase :
INPUT
3 4 5
OUTPUT
yes

A,B,C=map(int,input().split())
if((A+B>C)and(B+C>A)and(A+C>B)):
    print("yes")
else:
    print("no")


Given a number N and an array of N integers, find the Bitwise AND of the array.
Input Size N <= 100000
Sample Testcase :
INPUT
2
2 4
OUTPUT
0

N=input()
numbers=input().split()
bitand=int(numbers[0])
for i in range(1,int(N)):
 bitand=bitand&int(numbers[i])
print(bitand)


Given 2 numbers N,M. Find the GCD.
Sample Testcase :
INPUT
10 5
OUTPUT
5

N,M=map(int,input().split())
if(N<M):
    max1=M
else:
    max1=N
for i in range(1,max1+1):
    if((N%i==0)and(M%i==0)):
        gcd=i
print(gcd)

Given 3 numbers A,B,C find if they can form the sides of a scalene triangle.
Input Size : A,B,C <= 100000
Sample Testcase :
INPUT
3 4 5
OUTPUT
yes

A,B,C=map(int,input().split())
if((A!=B)and(B!=C)and(A!=C)):
    print("yes")
else:
    print("no")

Check whether the given 4 points form a square or not.
Example:
INPUT
10 10
10 20
20 20
20 10
OUTPUT
yes

x1,y1=map(int,input().split())
x2,y2=map(int,input().split())
x3,y3=map(int,input().split())
x4,y4=map(int,input().split())
dis1=abs((x1+x2)-(y1+y2))
dis2=abs((x1+x4)-(y1+y4))
dis3=abs((x3+x2)-(y3+y2))
dis4=abs((x3+x4)-(y3+y4))
dingl1=abs((x1+x3)-(y1+y3))
dingl2=abs((x2+x4)-(y2+y4))
if(dis1==dis4==dis3==dis3):
    if(dingl1==dingl2):
        print("yes")
    else:
        print("no")
else:
    print("no")


github link
https://github.com/vijayaganapathy/Python/tree/master


Given a sentence S of 2 words reverse the order of two words.
Input Size : |S| <= 10000000
Sample Testcase :
INPUT
hello world
OUTPUT
world hello

S=input().split()
first=S[0]
second=S[1]
print(second,first)
